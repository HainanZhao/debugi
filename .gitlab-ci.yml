image: node:18 # Use a recent Node.js LTS version

cache:
  paths:
    - node_modules/

pages: # This job is automatically recognized by GitLab Pages
  stage: deploy
  script:
    - npm install -g @angular/cli@latest # Install Angular CLI
    - npm install # Install project dependencies
    # Build the Angular app for production.
    # Adjust 'common-utils-ui' in base-href if your GitLab repository has a different name or path.
    # The output path might be 'dist/common-utils-ui' or 'dist/browser' depending on Angular version.
    # Check the actual output path after `ng build` if there are issues.
    - ng build --configuration production --base-href /debugi/
    # GitLab Pages expects artifacts in a 'public' directory.
    # Copy the build output to 'public'. Adjust 'dist/common-utils-ui' if your build output is different.
    - rm -rf public # Clean up previous public directory if any
    - mkdir public
    # Try to determine the correct build output directory.
    # Angular 17+ often uses 'dist/browser'. Older versions might use 'dist/project-name'.
    - |
      if [ -d "dist/debugi" ]; then
        cp -r dist/debugi/* public/
      elif [ -d "dist/browser" ]; then
        cp -r dist/browser/* public/
      else
        echo "Build output directory not found. Please check your angular.json or build process."
        exit 1
      fi
  artifacts:
    paths:
      - public # GitLab Pages will serve files from this directory
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH # Deploy only when commits are made to the default branch (e.g., main or master)
